#include <stdio.h>

#define TAM 10
#define TAM_NAVIO 3
#define OCUPADO 3

// Função para imprimir o tabuleiro
void imprimirTabuleiro(int tabuleiro[TAM][TAM]) {
    printf("   ");
    for (int i = 0; i < TAM; i++) {
        printf("%d ", i);
    }
    printf("\n");

    for (int i = 0; i < TAM; i++) {
        printf("%d: ", i);
        for (int j = 0; j < TAM; j++) {
            printf("%d ", tabuleiro[i][j]);
        }
        printf("\n");
    }
}

// Função para verificar se há sobreposição
int verificaSobreposicao(int tabuleiro[TAM][TAM], int linha[], int coluna[]) {
    for (int i = 0; i < TAM_NAVIO; i++) {
        if (tabuleiro[linha[i]][coluna[i]] != 0) {
            return 1; // Há sobreposição
        }
    }
    return 0;
}

// Função para posicionar um navio
void posicionarNavio(int tabuleiro[TAM][TAM], int linha[], int coluna[]) {
    for (int i = 0; i < TAM_NAVIO; i++) {
        tabuleiro[linha[i]][coluna[i]] = OCUPADO;
    }
}

int main() {
    int tabuleiro[TAM][TAM] = {0};

    // Coordenadas dos navios
    // 1. Horizontal: começa em (0,0)
    int h1_linha[] = {0, 0, 0};
    int h1_coluna[] = {0, 1, 2};

    // 2. Vertical: começa em (2,5)
    int v1_linha[] = {2, 3, 4};
    int v1_coluna[] = {5, 5, 5};

    // 3. Diagonal ↘ (diagonal principal): começa em (6,1)
    int d1_linha[] = {6, 7, 8};
    int d1_coluna[] = {1, 2, 3};

    // 4. Diagonal ↙ (diagonal inversa): começa em (2,7)
    int d2_linha[] = {2, 3, 4};
    int d2_coluna[] = {7, 6, 5};

    // Validação e posicionamento
    if (!verificaSobreposicao(tabuleiro, h1_linha, h1_coluna)) {
        posicionarNavio(tabuleiro, h1_linha, h1_coluna);
    } else {
        printf("Erro: sobreposição no navio horizontal.\n");
    }

    if (!verificaSobreposicao(tabuleiro, v1_linha, v1_coluna)) {
        posicionarNavio(tabuleiro, v1_linha, v1_coluna);
    } else {
        printf("Erro: sobreposição no navio vertical.\n");
    }

    if (!verificaSobreposicao(tabuleiro, d1_linha, d1_coluna)) {
        posicionarNavio(tabuleiro, d1_linha, d1_coluna);
    } else {
        printf("Erro: sobreposição no navio diagonal ↘.\n");
    }

    if (!verificaSobreposicao(tabuleiro, d2_linha, d2_coluna)) {
        posicionarNavio(tabuleiro, d2_linha, d2_coluna);
    } else {
        printf("Erro: sobreposição no navio diagonal ↙.\n");
    }

    // Exibir o tabuleiro
    imprimirTabuleiro(tabuleiro);

    return 0;
}
